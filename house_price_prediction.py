# -*- coding: utf-8 -*-
"""House_Price_Prediction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oU9_LKSJn8MU89Fr6FP5TaGEqr4j6uPm
"""

import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder

from google.colab import files
# Upload the CSV file
uploaded = files.upload()

# Load the uploaded CSV file into a DataFrame
df = pd.read_csv(list(uploaded.keys())[0])

# Show the first few rows of the dataset to verify
df.head()

# Separate Features and Target
X = df.drop('Price', axis=1)  # Drop target column 'Price'
y = df['Price']  # Target column

# Preprocess Features: Apply One-Hot Encoding to 'Location' and Standard Scaling
preprocessor = ColumnTransformer(
    transformers=[
        ('num', StandardScaler(), ['Bedroom', 'Hall', 'Kitchen', 'Bathrooms', 'Balcony', 'Size (sq ft)']),
        ('cat', OneHotEncoder(), ['Location'])
    ])

# Apply transformations
X_processed = preprocessor.fit_transform(X)

# Step 3: Split the data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X_processed, y, test_size=0.2, random_state=42)

# Step 4: Initialize and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 5: Make predictions on the test set
y_pred = model.predict(X_test)

# Step 6: Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

# Print results
print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Step 7: User Input for New House
print("Please enter the details of the new house:")

# User input for house features
bedroom = int(input("Enter number of bedrooms: "))
hall = int(input("Enter number of halls: "))
kitchen = int(input("Enter number of kitchens: "))
bathrooms = int(input("Enter number of bathrooms: "))
balcony = int(input("Enter number of balconies: "))
size_sqft = int(input("Enter size of the house in square feet: "))
location = input("Enter location (Rural, Urban, Suburban): ")

# Create a DataFrame with the user input
new_house = pd.DataFrame([[bedroom, hall, kitchen, bathrooms, balcony, size_sqft, location]],
                         columns=['Bedroom', 'Hall', 'Kitchen', 'Bathrooms', 'Balcony', 'Size (sq ft)', 'Location'])

# Process the new house data
new_house_processed = preprocessor.transform(new_house)

# Predict the price for the new house
predicted_price = model.predict(new_house_processed)

# Display the predicted price
print(f"Predicted Price for the new house: ${predicted_price[0]:,.2f}")

import pickle

# Save the model to a file
with open('house_price_model.pkl', 'wb') as model_file:
    pickle.dump(model, model_file)

# Save the preprocessor (scaler and encoder)
with open('preprocessor.pkl', 'wb') as vectorizer_file:
    pickle.dump(preprocessor, vectorizer_file)

print("\nModel and preprocessor saved successfully!")